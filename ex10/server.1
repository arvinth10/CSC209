Script started on Mon Mar 27 16:20:45 2017
]0;vijaya89@wolf:/h/u12/c5/00/vijaya89/csc209/vijaya89/ex10wolf:~/csc209/vijaya89/ex10$ gdb bufserver
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bufserver...done.
(gdb) break main
Breakpoint 1 at 0x400aee: file bufserver.c, line 67.
(gdb) run
Starting program: /h/u12/c5/00/vijaya89/csc209/vijaya89/ex10/bufserver 

Breakpoint 1, main () at bufserver.c:67
67      int main() {
(gdb) run   n
79        listenfd = setup();
(gdb) n
Listening on 54167
81          socklen = sizeof(peer);
(gdb) n
85          if ((fd = accept(listenfd, (struct sockaddr *)&peer, &socklen)) < 0) {
(gdb) n
89            printf("New connection on port %d\n", ntohs(peer.sin_port));
(gdb) quit
A debugging session is active.

        Inferior 1 [process 60310] will be killed.

Quit anyway? (y or n) y
]0;vijaya89@wolf:/h/u12/c5/00/vijaya89/csc209/vijaya89/ex10wolf:~/csc209/vijaya89/ex10$ gdb bufserverexit[Kgdb bufserver
GNU gdb (Ubuntu 7.7.1-0ubuntu5~14.04.2) 7.7.1
Copyright (C) 2014 Free Software Foundation, Inc.
License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.  Type "show copying"
and "show warranty" for details.
This GDB was configured as "x86_64-linux-gnu".
Type "show configuration" for configuration details.
For bug reporting instructions, please see:
<http://www.gnu.org/software/gdb/bugs/>.
Find the GDB manual and other documentation resources online at:
<http://www.gnu.org/software/gdb/documentation/>.
For help, type "help".
Type "apropos word" to search for commands related to "word"...
Reading symbols from bufserver...done.
(gdb) brae  eak main
Breakpoint 1 at 0x400aee: file bufserver.c, line 67.
(gdb) run
Starting program: /h/u12/c5/00/vijaya89/csc209/vijaya89/ex10/bufserver 

Breakpoint 1, main () at bufserver.c:67
67      int main() {
(gdb) n
79        listenfd = setup();
(gdb) n
Listening on 54167
81          socklen = sizeof(peer);
(gdb) n
85          if ((fd = accept(listenfd, (struct sockaddr *)&peer, &socklen)) < 0) {
(gdb) n
89            printf("New connection on port %d\n", ntohs(peer.sin_port));
(gdb) n
New connection on port 38474
92            inbuf = 0;          // buffer is empty; has no bytes
(gdb) n
93            room = sizeof(buf); // room == capacity of the whole buffer
(gdb) n
94            after = buf;        // start writing at beginning of buf
(gdb) n
96            while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
99              inbuf += nbytes; 
(gdb) n
103             where = find_network_newline(buf, inbuf); 
(gdb) n
105             if (where >= 0) { // OK. we have a full line
(gdb) n
114               buf[where] = '\n';
(gdb) n
115               buf[where+1]= '\0';
(gdb) n
118               printf("Next message: %s", buf);
(gdb) n
Next message: A stitch in time
129               memmove (buf,after+where+2,inbuf); 
(gdb) n
131               inbuf = inbuf -(where+2); 
(gdb) n
138             after = buf + inbuf; 
(gdb) n
139             room = sizeof(buf) - inbuf; 
(gdb) n
96            while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
99              inbuf += nbytes; 
(gdb) n
103             where = find_network_newline(buf, inbuf); 
(gdb) n
105             if (where >= 0) { // OK. we have a full line
(gdb) n
114               buf[where] = '\n';
(gdb) n
115               buf[where+1]= '\0';
(gdb) n
118               printf("Next message: %s", buf);
(gdb) n
Next message: A stitch in time
129               memmove (buf,after+where+2,inbuf); 
(gdb) n
131               inbuf = inbuf -(where+2); 
(gdb) n
138             after = buf + inbuf; 
(gdb) n
139             room = sizeof(buf) - inbuf; 
(gdb) n
96            while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
99              inbuf += nbytes; 
(gdb) n
103             where = find_network_newline(buf, inbuf); 
(gdb) n
105             if (where >= 0) { // OK. we have a full line
(gdb) n
114               buf[where] = '\n';
(gdb) n
115               buf[where+1]= '\0';
(gdb) n
118               printf("Next message: %s", buf);
(gdb) n
129               memmove (buf,after+where+2,inbuf); 
(gdb) n
131               inbuf = inbuf -(where+2); 
(gdb) n
138             after = buf + inbuf; 
(gdb) n
139             room = sizeof(buf) - inbuf; 
(gdb) n
96            while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
99              inbuf += nbytes; 
(gdb) n
103             where = find_network_newline(buf, inbuf); 
(gdb) n
105             if (where >= 0) { // OK. we have a full line
(gdb) n
114               buf[where] = '\n';
(gdb) 
115               buf[where+1]= '\0';
(gdb) n
118               printf("Next message: %s", buf);
(gdb) n
129               memmove (buf,after+where+2,inbuf); 
(gdb) n
131               inbuf = inbuf -(where+2); 
(gdb) n
138             after = buf + inbuf; 
(gdb) n
139             room = sizeof(buf) - inbuf; 
(gdb) n
96            while ((nbytes = read(fd, after, room)) > 0) {
(gdb) n
99              inbuf += nbytes; 
(gdb) n
103             where = find_network_newline(buf, inbuf); 
(gdb) n
105             if (where >= 0) { // OK. we have a full line
(gdb) n
114               buf[where] = '\n';
(gdb) n
115               buf[where+1]= '\0';
(gdb) u quiot  t
A debugging session is active.

        Inferior 1 [process 60397] will be killed.

Quit anyway? (y or n) y
]0;vijaya89@wolf:/h/u12/c5/00/vijaya89/csc209/vijaya89/ex10wolf:~/csc209/vijaya89/ex10$ exit
exit

Script done on Mon Mar 27 16:22:17 2017
